14.02.2023
Наследование:
Это способность класса наследовать свойства других классов. Под свойствами в данном случае понимают переменные и методы. 
При наследрвании разлечают:
	Родительский (базовый) - это класс свойства которого наследуют другие классы.
	Дочерний (производный) - это класс, который наследует свойства другого класса. 
Один и тот же класс, одновременно может быть как Дочерним, так и Базовым. Иерархия классов может быть бесконечно длинной 
(цепочка наследования).
Базовый класс не знает сколько и каких классов от него наследует. А дочерий класс знает лишь своего ближайшего родителя, 
Базовый класс обобщает свойства разных классов, а дочерний расширяет свойства базового и дополняет своими собственными.
Например:
			Есть базовый класс Грузовик. А его дочрний класс Самосвал, дополняет свойства грузовика откидеым кузовом.
			Его же дочерний класс Бензовоз, дополняет свойства своего родителя цмстерной для перевозки топлива
Наследование реализует - отношения между классами типа Является или же "is a" по этому прежде чем что то от чего то унаследоват:
Нужно убедиться в том, что то то является чем то. Благодаря обобщению наследование позволяет сократить значительный объем кода.
Благодаря повторого использованию кода Базового класса.


21.02.2023

Работа с файлами 
Для работы с ними, так же как и для вывода на экран и ввода с клавиатуры - используют потоки. Для вывода на экран 
используют поток:
cout, а для ввода с клавиатура cin 
cout - объект класса ostream
cin - объект класса istream 
Это консольные потоки, а к файловым относятся fout и fin потоки
fout - объект класса ofstream
fin - объект класса ifstream
Основнйо разницой между потоками Консоль от Файловых - является то, что консольные потоки уже существуют. А файловые нужно создавать 
для каждого файла. Объекты Ofstream и ifstream - они находятся в библиотекы <fstream>

																							22.02.2023
Cтатические перменные существуют в классе, а не в объектах. И соответственно занимают память только в классе, а не в каждом отдельном
объекте. Статические переменные и константы являются общими для всех объектов класса. ... Если статическая константа типа int, то ее
можно проинициализировать прямо в классе при объявлении. Во всех остальных случаях статические переменные и 
константы могут быть проинициализированны только за пределами класса.